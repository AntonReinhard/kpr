local L4 = require("L4");
local ld = L4.default_loader;
local vbus = ld:new_channel();
local fbdrv = ld:new_channel();

local log_channel = ld:new_channel();

-- io
ld:start({
        caps = {
            fbdrv = vbus:svr(), 
            icu = L4.Env.icu, 
            sigma0 = L4.cast(L4.Proto.Factory, L4.Env.sigma0):create(L4.Proto.Sigma0)
        },
        log = {"IO", "yellow"}
    }, 
    "rom/io rom/x86-legacy.devs rom/x86-fb.io"
);

-- framebuffer driver
ld:start({
        caps = {
            vbus = vbus,
            fb = fbdrv:svr()
        },
        log = {"fbdrv", "red"}
    },
    "rom/fb-drv -m 0x117"
);

-- logging server with framebuffer capability
ld:start({ 
        caps = {
            logger = log_channel:svr(), 
            jdb = L4.Env.jdb,
            fb = fbdrv
        },
        log = {"server", "blue"}
    },
   "rom/logging-server"
);

-- logging client 1
ld:start({
        caps = {
            logger = log_channel:create(0, "Client1")
        },
        log = {"client 1", "green"}
    },
    "rom/logging-client"
);

-- logging client 2
ld:start({
        caps = {
            logger = log_channel:create(0, "Client2")
        },
        log = {"client 2", "green"}
    },
    "rom/logging-client"
)
